# -*- coding: utf-8 -*-
"""MIS328 Application Development Project (Meeting Room System).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_IF6yL0JdEwPigYye7RYqOzsJyyh8vqE
"""



#Meeting Room Reservation System
#MIS 328 Group 6
#Allows users to reserve meeting/study rooms
#Updated 11/02

#import datetime to allow date and times to be used in functions
from datetime import datetime, timedelta

#Create a dictionary to hold each available meeting room and number them out 1-19
#use a list for each room called reservations that will store the list while the user is running the code
rooms = {
    1: {"name": "Multipurpose Room (SC 101)", "capacity": 108, "reservations": []},
    2: {"name": "Student Center Cafe (First Floor)", "capacity": 144, "reservations": []},
    3: {"name": "Fireplace Lounge (SC 120)", "capacity": 40, "reservations": []},
    4: {"name": "Study Room (SC 121)", "capacity": 6, "reservations": []},
    5: {"name": "Study Room (SC 122)", "capacity": 6, "reservations": [], "features": "children's play area"},
    6: {"name": "Meeting Room (SC 201 full)", "capacity": 35, "reservations": []},
    7: {"name": "Meeting Room (SC 201 half)", "capacity": 15, "reservations": []},
    8: {"name": "Meeting Room (SC 202 half)", "capacity": 15, "reservations": []},
    9: {"name": "Study Room (SC 203)", "capacity": 25, "reservations": []},
    10:{"name": "Group Study Room (Room 102)", "capacity": 2, "reservations": []},
    11:{"name": "Group Study Room (Room 103)", "capacity": 2, "reservations": []},
    12:{"name": "Group Study Room (Room 104)", "capacity": 2, "reservations": []},
    13:{"name": "Group Study Room (Room 106)", "capacity": 2, "reservations": []},
    14:{"name": "Group Study Room (Room 107)", "capacity": 2, "reservations": []},
    15:{"name": "Group Study Room (Room 108)", "capacity": 2, "reservations": []},
    16:{"name": "Group Study Room (Room 109)", "capacity": 4, "reservations": []},
    17:{"name": "Group Study Room (Room 115)", "capacity": 2, "reservations": []},
    18:{"name": "Group Study Room (Room 215)", "capacity": 4, "reservations": []},
    19:{"name": "Group Study Room (Room 216)", "capacity": 2, "reservations": []}
}
#create function to list all rooms and their capacity
def list_rooms(rooms):
#    """Lists all rooms and their capacities."""
    print("Available Rooms:")
    for room_number, room in rooms.items():
        print(f" Room {room_number}: {room['name']} (Capacity: {room['capacity']})")

#create function to book room
def bookRoom (reservationName, roomNumber, dateTime, startTime, endTime):
  #create a variable that holds the room number selected when running code
  room = rooms[int(roomNumber)]

  #verify reservation is less than 3 hours
  if (int(endTime) - int(startTime)) > 300:
    print("Reservation must be less than 3 hours. Please try again.")
    return
  #use parameters from function to verify room isn't reserved during that time
  for reservation in room["reservations"]:
  #if the reservation date and start time or end time overlaps print that the room is already reserved.
    if reservation['dateTime'] == dateTime and not(startTime >= reservation['endTime'] or endTime <= reservation['startTime']):
      print("This room has already been reserved during this time. Please try again.")
      return
  #create another dictionary to store reservation
  reservation = {"reservationName":reservationName, "dateTime": dateTime, "startTime": startTime, "endTime": endTime}
  #open room dictionary and update reservation under room selected
  room["reservations"].append(reservation)
  print(f"{reservationName} has successfully reserved {room['name']}  starting at {startTime} and ending at {endTime}")


#Function to cancel your reservation
def cancelReservation(reservationName, roomNumber):
  roomNumber = int(roomNumber)
  room = rooms[int(roomNumber)]
  #verify room number is valid
  if not room:
    print("Invalid room number, try again.")
    return


#Remove the reservation from the reservation list
  for reservation in rooms[roomNumber]["reservations"]:
    if reservation["reservationName"] == reservationName:
      rooms[roomNumber]["reservations"].remove(reservation)
      print(f"{reservationName} has been successfully cancelled")
      return

#Function to modify your reservation
def modifyReservation(roomNumber, reservationName, newDateTime, newStartTime, newEndTime):
  roomNumber = int(roomNumber)
  room = rooms[int(roomNumber)]
  if roomNumber not in rooms:
    print("Invalid room number, try again.")
    return
  for reservation in room["reservations"]:
    if reservation["reservationName"] == reservationName:
        #start updating your reservation with new date and times
      if newDateTime:
          reservation["dateTime"] = newDateTime
      if newStartTime:
          reservation["startTime"] = newStartTime
      if newEndTime:
          reservation["endTime"] = newEndTime
      #verify reservation is less than 3 hours
      if (int(newEndTime) - int(newStartTime)) > 300:
        print("Reservation must be less than 3 hours. Please try again.")
        return
      print(f"{reservationName} has been successfully modified")
      return

# Function to add feedback for a room
def add_feedback(roomNumber, userName, rating, comment):
  room = rooms[int(roomNumber)]
  feedback = {"userName": userName, "rating": rating, "comment": comment}
  if "feedback" not in room:
    room["feedback"] = []
  room["feedback"].append(feedback)
  print(f"Thank you {userName}, your feedback for {room['name']} has been recorded.")

# function to view feedback for a room
def view_feedback(roomNumber):
  room = rooms[int(roomNumber)]
  if "feedback" in room:
    print(f"Feedback for {room['name']}:")
    for feedback in room["feedback"]:
      print(f" User: {feedback['userName']}")
      print(f" Rating: {feedback['rating']}")
      print(f" Comment: {feedback['comment']}\n")
  else:
    print(f"No feedback available for {room['name']} yet.")

def main():
  #display all available rooms
  list_rooms(rooms)

  #create loop
  while True:

    print("\n1 - Book Room, 2 - Cancel Reservation, 3 - Modify Reservation, 4 - Add Feedback, 5 - View Feedback, 6 - Exit Code")
    userInput = input("Please choose from the above options: ")

    #create book room
    if userInput == "1":
      reservationName = input("Enter your name: ")
      roomNumber = input("Enter room number from list (1, 2, 3, ...): ")
      dateTime = input("Enter the date you would like to reserve the room for (MM-DD-YYYY):  ")
      startTime = input("Enter start time (HHMM): ")
      endTime = input("Enter end time (HHMM): ")
      bookRoom(reservationName, roomNumber, dateTime, startTime, endTime)

    #create cancel room
    elif userInput =="2":
      reservationName = input("Enter your name: ")
      roomNumber = input("Enter reserved room number: ")
      dateTime = input("Enter date for reservation (MM-DD-YYYY): ")
      cancelReservation(reservationName, roomNumber)
    #create modify room
    elif userInput == "3":
      reservationName = input("Enter your name: ")
      roomNumber = input("Enter room number from list (1, 2, 3, ...): ")
      newDateTime = input("Enter the date you reserved the room for (MM-DD-YYYY):  ")
      newStartTime = input("Enter new start time (HHMM): ")
      newEndTime = input("Enter new end time (HHMM): ")
      modifyReservation(roomNumber, reservationName, newDateTime, newStartTime, newEndTime)

    # Add user feedback
    elif userInput == "4":
      roomNumber = input("Enter room number: ")
      userName = input("Enter your name: ")
      rating = input("Enter your rating (1-5): ")
      comment = input("Enter your comment: ")
      add_feedback(roomNumber, userName, rating, comment)

    # View user room feedback
    elif userInput == "5":
      roomNumber = input("Enter room number: ")
      view_feedback(roomNumber)


    elif userInput == "6":
      break

main()